<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:IntentConnectWeighing">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IntentConnectWeighing;component/StyleDictionary/Share.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <local:TrueToFalseConverter x:Key="TrueToFalseConverter"></local:TrueToFalseConverter>

    <!--下拉条目样式-->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}"  Margin="0,0.5">
                        <Border x:Name="ItemBackground"
                                IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"></Border>
                        <ContentPresenter
                            x:Name="contentPresenter" 
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Margin="{TemplateBinding Margin}"></ContentPresenter>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ItemSelectedBackground}" TargetName="ItemBackground"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource ItemMouseOverBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--default comboBox style-->
    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextBackground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="local:ControlAttachProperty.FocusBackground" Value="{DynamicResource FocusBackground}" />
        <Setter Property="local:ControlAttachProperty.FocusBorderBrush" Value="{DynamicResource FocusBorderBrush}" />
        <Setter Property="local:ControlAttachProperty.MouseOverBorderBrush" Value="{DynamicResource MouseOverBorderBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding local:ControlAttachProperty.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="21" />
                            </Grid.ColumnDefinitions>
                            <!--Label区域-->
                            <ContentControl x:Name="Label"
                                            Margin="1,1,0,1"
                                            IsTabStop="False"
                                            IsHitTestVisible="False"
                                            Content="{TemplateBinding local:ControlAttachProperty.Label}"
                                            Template="{TemplateBinding local:ControlAttachProperty.LabelTemplate }" />
                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" 
                                    Panel.ZIndex="2" 
                                    Grid.Column="2" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" >
                                <ContentControl VerticalAlignment="Center" 
                                                VerticalContentAlignment="Center" 
                                                HorizontalAlignment="Right"
                                                HorizontalContentAlignment="Right"
                                                Template="{TemplateBinding local:ControlAttachProperty.AttachContent}" />
                            </Border>
                            <!--下拉按钮-->
                            <ToggleButton x:Name="PART_DropDownToggle" 
                                         IsTabStop="False" 
                                         Style="{DynamicResource ComboToggleButton}" 
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                         RelativeSource={RelativeSource TemplatedParent}}"
                                         Margin="2 1 2 1"
                                         Grid.Column="1"
                                         Grid.ColumnSpan="3" 
                                         local:ControlAttachProperty.Icon="&#xe62c;"
                                         IsEnabled="{Binding Path=IsReadOnly,
                                         RelativeSource={RelativeSource TemplatedParent},  Converter={StaticResource TrueToFalseConverter },Mode=OneWay}"
                                         Background="{TemplateBinding local:ControlAttachProperty.FocusBackground}"/>
                            <!--水印-->
                            <Border Grid.Column="1">
                                <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" Text="{TemplateBinding local:ControlAttachProperty.Watermark}" 
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="{DynamicResource WatermarkOpacity}" HorizontalAlignment="Left" TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                            </Border>
                            <!--主内容区域-->
                            <Grid Grid.Column="1" x:Name="ContentSite" Margin="2 0 0 0" >
                                <ContentPresenter x:Name="PART_SelectedItem" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" Margin="2,0,2,0" 
                                                  IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <!--文本编辑-->
                                <TextBox 
                                    x:Name="PART_EditableTextBox" 
                                    Style="{DynamicResource EditableTextBoxStyle}" 
                                          Visibility="Visible" 
                                         HorizontalAlignment="Stretch" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    IsHitTestVisible="True"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" 
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Foreground="{TemplateBinding Foreground}"
                                         Text="{TemplateBinding Text}" 
                                    FontSize="{TemplateBinding FontSize}" />
                            </Grid>
                        </Grid>
                        <!--弹出下拉控件-->
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               Focusable="False"
                          
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               Placement="Bottom">
                            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        HorizontalAlignment="Stretch"
                                        Height="Auto" 
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{DynamicResource PopupBackground}">
                                </Border>
                                <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="1"  Style="{DynamicResource DefaultScrollViewer}">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>           
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox包含清除Text按钮的样式 ClearButtonComboBox -->
    <Style TargetType="{x:Type ComboBox}" x:Key="ClearButtonComboBoxStyle" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="local:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:IconButton 
                        Icon="&#xe648;" 
                        Style="{DynamicResource  IconButtonTransparencyStyle}"
                        IsTabStop="False" IconMargin="0"
                        local:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                        Command="local:ControlAttachProperty.ClearTextCommand" 
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}}"
                        IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}, Converter={StaticResource TrueToFalseConverter},Mode=OneWay}"
                        Margin="1,3,0,4" IconSize="14" Foreground="{DynamicResource TextForeground}" Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox包含附加属性Label的样式 LabelComboBox -->
    <Style TargetType="{x:Type ComboBox}" x:Key="LabelComboBoxStyle" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="Width" Value="260"></Setter>
        <Setter Property="local:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Width="60" Background="{DynamicResource TextLabelBackground}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox包含附加属性Label，以及ClearText按钮的样式 LabelClearButtonComboBox -->
    <Style x:Key="LabelClearButtonComboBoxStyle" 
           TargetType="{x:Type ComboBox}" 
           BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="Width" Value="280"></Setter>
        <Setter Property="local:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Width="Auto" Background="{DynamicResource TextLabelBackground}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="local:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:IconButton                        
                        Icon="&#xe648;" 
                        Style="{DynamicResource IconButtonTransparencyStyle}" 
                        IsTabStop="False" 
                        IconMargin="0"
                        local:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                        Command="local:ControlAttachProperty.ClearTextCommand" 
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}}"
                        IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}},  Converter={StaticResource TrueToFalseConverter},Mode=OneWay}"
                        Margin="0,3,0,4" 
                        IconSize="14"
                        Foreground="{DynamicResource TextForeground}" 
                        MouseOverForeground="Red"
                        Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>