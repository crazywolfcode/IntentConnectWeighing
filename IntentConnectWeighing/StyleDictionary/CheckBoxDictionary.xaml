<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:IntentConnectWeighing">
    <Style x:Key="DefaultCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#787878"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="local:ControlAttachProperty.IconMargin" Value="1, 1, 4, 1"/>
        <Setter Property="local:ControlAttachProperty.IconSize" Value="24"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="grid" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock  x:Name="icon" Style="{DynamicResource IFontStyle}" Text="&#xe68b;"
                                        FontSize="{TemplateBinding local:ControlAttachProperty.IconSize}"
                                        Margin="{TemplateBinding local:ControlAttachProperty.IconMargin}"
                                        Foreground="{TemplateBinding Foreground}"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Text" Value="&#xe6ae;" TargetName="icon" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource myBlue}" TargetName="icon"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Text" Value="&#xe6af;" TargetName="icon" ></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#333333"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BoxCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"></Setter>
        <Setter Property="Padding" Value="3 2 3 2"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="grid" VerticalAlignment="Center">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            Height="{TemplateBinding Height}"                           
                            Background="{TemplateBinding Background}" 
                            Width="{TemplateBinding Width}">
                            <ContentPresenter       
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--选中的状态标识-->
                        <TextBlock Text="{TemplateBinding local:ControlAttachProperty.Icon}"
                                   x:Name="checkState" 
                                   Style="{DynamicResource IFontStyle}" 
                                   VerticalAlignment="Bottom" 
                                    HorizontalAlignment="Right" 
                                   Visibility="Hidden"
                                   FontSize="{TemplateBinding local:ControlAttachProperty.IconSize}" 
                                   Margin="1,0,0,0"
                                   Foreground="{DynamicResource RadioButtonCheckedForegroundColor}"/>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="checkState" ></Setter>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButtonCheckedForegroundColor}"></Setter>
                            <Setter Property="BorderThickness" Value="1" TargetName="border"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="RoyalBlue"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="FIconToggleButton">
        <Setter Property="Foreground" Value="#797979" />
        <Setter Property="local:ControlAttachProperty.IconSize" Value="24"/>
        <Setter Property="local:ControlAttachProperty.IconMargin" Value="1"/>
        <Setter Property="local:ControlAttachProperty.Icon" Value="&#xe65e;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">                      
                        <TextBlock x:Name="FIcon" FontSize="{Binding Path=(local:ControlAttachProperty.IconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding local:ControlAttachProperty.Icon}" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Style="{DynamicResource IFontStyle}"
                                   Margin="{TemplateBinding local:ControlAttachProperty.IconMargin}"/>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource myBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource myBlue}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource myBlue}" />
                            <Setter Property="Text" Value="&#xe68f;" TargetName="FIcon"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>