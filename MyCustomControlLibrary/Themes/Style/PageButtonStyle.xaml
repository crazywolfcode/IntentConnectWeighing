<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MyCustomControlLibrary">

    <Style  TargetType="{x:Type local:PageButton}">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="CornerRadius" Value="11"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="Type" Value="0">           
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PageButton}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>

                                <StackPanel Orientation="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ContentOritation}"     
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <local:IconTextBlock x:Name="icon"           
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Foreground}"
                                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IconSize}"
                                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Icon}"                                     
                                           Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IconMargin}"/>
                                    <TextBlock x:Name="txt" 
                                           TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ContentDecorations}"
                                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content}"
                                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=FontSize}"
                                           VerticalAlignment="Center"/>
                                </StackPanel>
                                <TextBlock x:Name="IndicatorRow" Grid.Row="1" Background="Transparent" Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IndicatorHeight}"></TextBlock>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveIndicatorColor}" TargetName="IndicatorRow"></Setter>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="icon"></Setter>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="txt"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="false">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveIndicatorColor}" TargetName="IndicatorRow"></Setter>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="icon"></Setter>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="txt"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="Type" Value="1">            
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PageButton}">                           
                            <Border  x:Name="border"  
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Width="24" 
                                     Height="24" 
                                     CornerRadius="11" 
                                     Background="LightGray" 
                                    >
                                <TextBlock x:Name="pagetx"  Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveBackground}" TargetName="border"/>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="pagetx"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="pagetx" Storyboard.TargetProperty="(TextBlock.FontSize)" To="16"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveBackground}" TargetName="border"></Setter>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="pagetx"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="Type" Value="2">
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PageButton}">
                            <Border  x:Name="border"  
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Width="{TemplateBinding Width}" 
                                     Height="{TemplateBinding Height}" 
                                     CornerRadius="3" 
                                     Background="LightGray" 
                                    >
                                <TextBlock x:Name="pagetx"  Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveBackground}" TargetName="border"/>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="pagetx"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="pagetx" Storyboard.TargetProperty="(TextBlock.FontSize)" To="16"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveBackground}" TargetName="border"></Setter>
                                    <Setter Property="Foreground"  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActiveForground}" TargetName="pagetx"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>